程序执行，发现程序执行结束，shell还在阻塞等待用户输入。这是因为，shell → fork → ./pipe1， 程序pipe1的子进程将stdin重定向给管道，父进程执行的ls会将结果集通过管道写给子进程。若父进程在子进程打印wc的结果到屏幕之前被shell调用wait回收，shell就会先输出$提示符。
练习：使用管道实现兄弟进程间通信。 兄：ls  弟： wc -l  父：等待回收子进程。

要求，使用“循环创建N个子进程”模型创建兄弟进程，使用循环因子i标示。注意管道读写行为。                                                                                                                                                                                                                                    【pipe2.c】

测试：是否允许，一个pipe有一个写端，多个读端呢？是否允许有一个读端多个写端呢？               【pipe3.c】

课后作业: 统计当前系统中进程ID大于10000的进程个数。

管道缓冲区大小
可以使用ulimit –a 命令来查看当前系统中创建管道文件所对应的内核缓冲区大小。通常为：
pipe size            (512 bytes, -p) 8
也可以使用fpathconf函数，借助参数   选项来查看。使用该宏应引入头文件<unistd.h>
long fpathconf(int fd, int name); 成功：返回管道的大小   失败：-1，设置errno

管道的优劣
优点：简单，相比信号，套接字实现进程间通信，简单很多。
缺点：1. 只能单向通信，双向通信需建立两个管道。
2. 只能用于父子、兄弟进程(有共同祖先)间通信。该问题后来使用fifo有名管道解决。
